name: "Setup context for workflow"
description: "Setup environment and check if release PR"

outputs:
  is_release_pr:
    description: "Whether this is a release PR"
    value: ${{ steps.check-release-pr.outputs.is_release_pr }}

runs:
  using: "composite"
  steps:
    # 1. 레포지토리 체크아웃
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 2. pnpm 설치
    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 9
        run_install: false

    # 3. Node.js 설정
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "20"
        cache: "pnpm"
        registry-url: "https://registry.npmjs.org"
        scope: "@seo-ny"

    # 3-1. pnpm 캐시 경로 출력
    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    # 3-2. pnpm 캐시 설정
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    # 4. 의존성 설치
    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    # 5. 현재 PR이 릴리즈 PR인지 아닌지 확인
    - name: Check if release PR
      id: check-release-pr
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
      run: |
        PR_TITLE=$(gh api repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }} --jq .title)
        if [[ "$PR_TITLE" == "Prerelease 버전 업데이트"* ]]; then
          echo "is_release_pr=true" >> $GITHUB_OUTPUT
        else
          echo "is_release_pr=false" >> $GITHUB_OUTPUT
        fi
